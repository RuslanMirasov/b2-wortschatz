{"version":3,"file":"static/js/55.72f96663.chunk.js","mappings":"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","sources":["api/functions.js","webpack://b2-wortschatz/./src/components/BreadCrumbs/BreadCrumbs.module.scss?5991","components/BreadCrumbs/BreadCrumbs.jsx","webpack://b2-wortschatz/./src/components/WordsCollection/WordsCollection.module.scss?16d8","components/WordsCollection/WordsCollection.jsx","pages/Thema.jsx"],"sourcesContent":["// Генерация рандомного числа\nexport function randomNumber(maxNumber) {\n  const randomNum = Math.floor(Math.random() * maxNumber) + 1;\n  return randomNum;\n}\n\n// Генерация уникального ключа для коллекций\nexport function newKey() {\n  const datePart = new Date().getTime().toString(); // Метка времени в виде строкового представления\n  const randomPart = Math.random().toString().substr(2, 5); // Случайная часть\n  const uniqueId = datePart + randomPart;\n  return uniqueId;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"BreadCrumbs\":\"BreadCrumbs_BreadCrumbs__iuTfE\"};","import css from '../BreadCrumbs/BreadCrumbs.module.scss';\nimport { Link } from 'react-router-dom';\nimport { newKey } from '../../api/functions';\n\nconst BreadCrumbs = ({ location, books }) => {\n  const { pathname } = location;\n  const pathList = pathname.split('/');\n  const urlList = [{ text: 'Bücher', url: '../' }];\n  console.log(books[Number(pathList[1]) - 1]);\n  if (pathList[1]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].name, url: `../${pathList[1]}` });\n  }\n  if (pathList[2]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].name, url: `../${pathList[1]}/${pathList[2]}` });\n  }\n  if (pathList[3]) {\n    urlList.push({\n      text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].words[Number(pathList[3]) - 1].id,\n      url: `../${pathList[1]}/${pathList[2]}/${pathList[3]}`,\n    });\n  }\n  return (\n    <ul className={css.BreadCrumbs}>\n      {pathList.map((url, index) => {\n        return (\n          <li key={newKey()}>\n            <Link to={urlList[index].url}>{urlList[index].text}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default BreadCrumbs;\n","// extracted by mini-css-extract-plugin\nexport default {\"TitleBox\":\"WordsCollection_TitleBox__qLn20\",\"WordsList\":\"WordsCollection_WordsList__0TosX\",\"WordsListItem\":\"WordsCollection_WordsListItem__FSlNn\",\"Number\":\"WordsCollection_Number__-rppR\",\"Name\":\"WordsCollection_Name__GiwmB\",\"Progress\":\"WordsCollection_Progress__Cv0WJ\",\"ProcentLine\":\"WordsCollection_ProcentLine__Coj2f\"};","import css from '../WordsCollection/WordsCollection.module.scss';\nimport BreadCrumbs from '../../components/BreadCrumbs/BreadCrumbs';\nimport { Link, useLocation } from 'react-router-dom';\nimport books from '../../api/books';\nimport { randomNumber } from '../../api/functions';\n\nconst WordsCollection = () => {\n  const location = useLocation();\n  const urlPath = location.pathname.split('/');\n  const currentBook = books.find(book => book.id === Number(urlPath[1]));\n  const currentThema = currentBook.thems.find(them => them.id === Number(urlPath[2]));\n  return (\n    <>\n      <BreadCrumbs location={location} books={books} />\n      <div className={css.TitleBox}>\n        <h1>\n          {currentThema.name} <span>({currentThema.words.length} Wörtern)</span>\n        </h1>\n        <Link to={`${location.pathname}/${randomNumber(currentThema.words.length)}`} className=\"button\">\n          <p>Beginn des Unterrichts</p>\n        </Link>\n      </div>\n\n      <ul className={css.WordsList}>\n        {currentThema.words.map(thema => {\n          const { id, name, progress } = thema;\n          const procent = progress * 25;\n          return (\n            <Link key={id} className={css.WordsListItem} to={`${location.pathname}/${id}`}>\n              <span className={css.Number}>{id}</span>\n              <p className={css.Name}>{name}</p>\n              <div className={css.Progress}>\n                <div className={css.ProcentLine} style={{ width: `${procent}%` }}></div>\n                <p>{procent}%</p>\n              </div>\n            </Link>\n          );\n        })}\n      </ul>\n      <Link to={`${location.pathname}/${randomNumber(currentThema.words.length)}`} className=\"button\">\n        <p>Beginn des Unterrichts</p>\n      </Link>\n    </>\n  );\n};\n\nexport default WordsCollection;\n","import Section from '../components/Section/Section';\nimport WordsCollection from '../components/WordsCollection/WordsCollection';\nconst Thema = () => {\n  return (\n    <Section>\n      <WordsCollection />\n    </Section>\n  );\n};\n\nexport default Thema;\n"],"names":["randomNumber","maxNumber","Math","floor","random","newKey","Date","getTime","toString","substr","_ref","location","books","pathList","pathname","split","urlList","text","url","console","log","Number","push","name","concat","thems","words","id","_jsx","className","css","children","map","index","Link","to","useLocation","urlPath","currentThema","book","find","them","_jsxs","_Fragment","BreadCrumbs","length","thema","procent","progress","style","width","Section","WordsCollection"],"sourceRoot":""}