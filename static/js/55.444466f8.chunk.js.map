{"version":3,"file":"static/js/55.444466f8.chunk.js","mappings":"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","sources":["api/functions.js","webpack://b2-wortschatz/./src/components/BreadCrumbs/BreadCrumbs.module.scss?5991","components/BreadCrumbs/BreadCrumbs.jsx","webpack://b2-wortschatz/./src/components/WordsCollection/WordsCollection.module.scss?16d8","components/WordsCollection/WordsCollection.jsx","pages/Thema.jsx"],"sourcesContent":["// Генерация рандомного числа\nexport function randomNumber(maxNumber, blacklistNumber) {\n  let randomNum = Math.floor(Math.random() * maxNumber) + 1;\n  do {\n    randomNum = Math.floor(Math.random() * maxNumber) + 1;\n  } while (blacklistNumber && randomNum === blacklistNumber);\n  return randomNum;\n}\n\n// Генерация уникального ключа для коллекций\nexport function newKey() {\n  const datePart = new Date().getTime().toString(); // Метка времени в виде строкового представления\n  const randomPart = Math.random().toString().substr(2, 5); // Случайная часть\n  const uniqueId = datePart + randomPart;\n  return uniqueId;\n}\n\n// Выделение ключевых слов в тексте жирным\nexport function markImportantWords(text, words) {\n  const wordsSet = new Set(words.map(word => word.toLowerCase())); // Создаем множество слов в нижнем регистре\n  const wordsArray = text.split(/\\b/); // Разбиваем текст на массив слов\n\n  const emphasizedText = wordsArray\n    .map(word => {\n      const normalizedWord = word.toLowerCase();\n      if (wordsSet.has(normalizedWord)) {\n        return `<b>${word}</b>`; // Выделяем жирным шрифтом\n      } else {\n        return word;\n      }\n    })\n    .join('');\n  return emphasizedText;\n}\n\n//Генерация аватарок\nexport function avatar() {\n  let avatar1 = Math.floor(Math.random() * 6) + 1;\n  let avatar2 = Math.floor(Math.random() * 6) + 1;\n  while (avatar2 === avatar1) {\n    avatar2 = Math.floor(Math.random() * 6) + 1;\n  }\n  return [avatar1, avatar2];\n}\n\n// Перетасовка массива\nexport function mixArray(arr) {\n  const array = [...arr];\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"BreadCrumbs\":\"BreadCrumbs_BreadCrumbs__iuTfE\"};","import css from '../BreadCrumbs/BreadCrumbs.module.scss';\nimport { Link } from 'react-router-dom';\nimport { newKey } from '../../api/functions';\n\nconst BreadCrumbs = ({ location, books }) => {\n  const { pathname } = location;\n  const pathList = pathname.split('/');\n  const urlList = [{ text: 'Bücher', url: '../' }];\n  if (pathList[1]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].name, url: `../${pathList[1]}` });\n  }\n  if (pathList[2]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].name, url: `../${pathList[1]}/${pathList[2]}` });\n  }\n  if (pathList[3]) {\n    urlList.push({\n      text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].words[Number(pathList[3]) - 1].id,\n      url: `../${pathList[1]}/${pathList[2]}/${pathList[3]}`,\n    });\n  }\n  return (\n    <ul className={css.BreadCrumbs}>\n      {pathList.map((url, index) => {\n        return (\n          <li key={newKey()}>\n            <Link to={urlList[index].url}>{urlList[index].text}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default BreadCrumbs;\n","// extracted by mini-css-extract-plugin\nexport default {\"TitleBox\":\"WordsCollection_TitleBox__qLn20\",\"WordsList\":\"WordsCollection_WordsList__0TosX\",\"WordsListItem\":\"WordsCollection_WordsListItem__FSlNn\",\"Number\":\"WordsCollection_Number__-rppR\",\"Name\":\"WordsCollection_Name__GiwmB\",\"Progress\":\"WordsCollection_Progress__Cv0WJ\",\"ProcentLine\":\"WordsCollection_ProcentLine__Coj2f\"};","import css from '../WordsCollection/WordsCollection.module.scss';\nimport BreadCrumbs from '../../components/BreadCrumbs/BreadCrumbs';\nimport { Link, useLocation } from 'react-router-dom';\nimport books from '../../api/books';\nimport { randomNumber } from '../../api/functions';\n\nconst WordsCollection = () => {\n  const location = useLocation();\n  const urlPath = location.pathname.split('/');\n  const currentBook = books.find(book => book.id === Number(urlPath[1]));\n  const currentThema = currentBook.thems.find(them => them.id === Number(urlPath[2]));\n  return (\n    <>\n      <BreadCrumbs location={location} books={books} />\n      <div className={css.TitleBox}>\n        <h1>\n          {currentThema.name} <span>({currentThema.words.length} Wörtern)</span>\n        </h1>\n        <Link to={`${location.pathname}/${randomNumber(currentThema.words.length)}`} className=\"button\">\n          <p>Beginn des Unterrichts</p>\n        </Link>\n      </div>\n\n      <ul className={css.WordsList}>\n        {currentThema.words.map(thema => {\n          const { id, name, progress } = thema;\n          const procent = progress * 25;\n          return (\n            <Link key={id} className={css.WordsListItem} to={`${location.pathname}/${id}`}>\n              <span className={css.Number}>{id}</span>\n              <p className={css.Name}>{name}</p>\n              <div className={css.Progress}>\n                <div className={css.ProcentLine} style={{ width: `${procent}%` }}></div>\n                <p>{procent}%</p>\n              </div>\n            </Link>\n          );\n        })}\n      </ul>\n      <Link to={`${location.pathname}/${randomNumber(currentThema.words.length)}`} className=\"button\">\n        <p>Beginn des Unterrichts</p>\n      </Link>\n    </>\n  );\n};\n\nexport default WordsCollection;\n","import Section from '../components/Section/Section';\nimport WordsCollection from '../components/WordsCollection/WordsCollection';\nconst Thema = () => {\n  return (\n    <Section>\n      <WordsCollection />\n    </Section>\n  );\n};\n\nexport default Thema;\n"],"names":["randomNumber","maxNumber","blacklistNumber","randomNum","Math","floor","random","newKey","Date","getTime","toString","substr","markImportantWords","text","words","wordsSet","Set","map","word","toLowerCase","split","normalizedWord","has","concat","join","avatar","avatar1","avatar2","mixArray","arr","array","_toConsumableArray","i","length","j","_ref","location","books","pathList","pathname","urlList","url","push","Number","name","thems","id","_jsx","className","css","children","index","Link","to","useLocation","urlPath","currentThema","book","find","them","_jsxs","_Fragment","BreadCrumbs","thema","procent","progress","style","width","Section","WordsCollection"],"sourceRoot":""}