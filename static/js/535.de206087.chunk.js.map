{"version":3,"file":"static/js/535.de206087.chunk.js","mappings":"mHACO,SAASA,EAAaC,GAE3B,OADkBC,KAAKC,MAAMD,KAAKE,SAAWH,GAAa,CAE5D,CAGO,SAASI,IAId,OAHiB,IAAIC,MAAOC,UAAUC,WACnBN,KAAKE,SAASI,WAAWC,OAAO,EAAG,EAGxD,C,6GCXA,MAA8B,iC,6BCiC9B,EA9BoB,SAAHC,GAA6B,IAAvBC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAEzBC,EADeF,EAAbG,SACkBC,MAAM,KAC1BC,EAAU,CAAC,CAAEC,KAAM,YAAUC,IAAK,QAcxC,OAbAC,QAAQC,IAAIR,EAAMS,OAAOR,EAAS,IAAM,IACpCA,EAAS,IACXG,EAAQM,KAAK,CAAEL,KAAML,EAAMS,OAAOR,EAAS,IAAM,GAAGU,KAAML,IAAI,MAADM,OAAQX,EAAS,MAE5EA,EAAS,IACXG,EAAQM,KAAK,CAAEL,KAAML,EAAMS,OAAOR,EAAS,IAAM,GAAGY,MAAMJ,OAAOR,EAAS,IAAM,GAAGU,KAAML,IAAI,MAADM,OAAQX,EAAS,GAAE,KAAAW,OAAIX,EAAS,MAE1HA,EAAS,IACXG,EAAQM,KAAK,CACXL,KAAML,EAAMS,OAAOR,EAAS,IAAM,GAAGY,MAAMJ,OAAOR,EAAS,IAAM,GAAGa,MAAML,OAAOR,EAAS,IAAM,GAAGc,GACnGT,IAAI,MAADM,OAAQX,EAAS,GAAE,KAAAW,OAAIX,EAAS,GAAE,KAAAW,OAAIX,EAAS,OAIpDe,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAC5BlB,EAASmB,KAAI,SAACd,EAAKe,GAClB,OACEL,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAInB,EAAQiB,GAAOf,IAAIa,SAAEf,EAAQiB,GAAOhB,SADvCZ,EAAAA,EAAAA,KAIb,KAGN,C,6ICRA,EAlBa,WACX,IAAMM,GAAWyB,EAAAA,EAAAA,MACXC,EAAU1B,EAASG,SAASC,MAAM,KAElCuB,EADc1B,EAAAA,EAAAA,MAAW,SAAA2B,GAAI,OAAIA,EAAKZ,KAAON,OAAOgB,EAAQ,GAAG,IACpCZ,MAAMe,MAAK,SAAAC,GAAI,OAAIA,EAAKd,KAAON,OAAOgB,EAAQ,GAAG,IAC5EK,EAAcJ,EAAaZ,MAAMc,MAAK,SAAAG,GAAI,OAAIA,EAAKhB,KAAON,OAAOgB,EAAQ,GAAG,IAC5EO,EAAYN,EAAaZ,MAAMmB,OACrC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhB,SAAA,EACEH,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAACrC,SAAUA,EAAUC,MAAOA,EAAAA,KACxCgB,EAAAA,EAAAA,KAAA,MAAAG,SAAKW,EAAYnB,QACjBK,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,MAAAX,OAAQH,OAAOgB,EAAQ,IAAG,KAAAb,OAAIH,OAAOgB,EAAQ,IAAG,KAAAb,QAAIxB,EAAAA,EAAAA,GAAa4C,IAAcf,UAAU,SAAQE,SAAC,aAKhH,ECZA,EARc,WACZ,OACEH,EAAAA,EAAAA,KAACqB,EAAAA,EAAO,CAAAlB,UACNH,EAAAA,EAAAA,KAACsB,EAAI,KAGX,C","sources":["api/functions.js","webpack://b2-wortschatz/./src/components/BreadCrumbs/BreadCrumbs.module.scss?5991","components/BreadCrumbs/BreadCrumbs.jsx","components/Game/Game.jsx","pages/Words.jsx"],"sourcesContent":["// Генерация рандомного числа\nexport function randomNumber(maxNumber) {\n  const randomNum = Math.floor(Math.random() * maxNumber) + 1;\n  return randomNum;\n}\n\n// Генерация уникального ключа для коллекций\nexport function newKey() {\n  const datePart = new Date().getTime().toString(); // Метка времени в виде строкового представления\n  const randomPart = Math.random().toString().substr(2, 5); // Случайная часть\n  const uniqueId = datePart + randomPart;\n  return uniqueId;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"BreadCrumbs\":\"BreadCrumbs_BreadCrumbs__iuTfE\"};","import css from '../BreadCrumbs/BreadCrumbs.module.scss';\nimport { Link } from 'react-router-dom';\nimport { newKey } from '../../api/functions';\n\nconst BreadCrumbs = ({ location, books }) => {\n  const { pathname } = location;\n  const pathList = pathname.split('/');\n  const urlList = [{ text: 'Bücher', url: '../' }];\n  console.log(books[Number(pathList[1]) - 1]);\n  if (pathList[1]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].name, url: `../${pathList[1]}` });\n  }\n  if (pathList[2]) {\n    urlList.push({ text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].name, url: `../${pathList[1]}/${pathList[2]}` });\n  }\n  if (pathList[3]) {\n    urlList.push({\n      text: books[Number(pathList[1]) - 1].thems[Number(pathList[2]) - 1].words[Number(pathList[3]) - 1].id,\n      url: `../${pathList[1]}/${pathList[2]}/${pathList[3]}`,\n    });\n  }\n  return (\n    <ul className={css.BreadCrumbs}>\n      {pathList.map((url, index) => {\n        return (\n          <li key={newKey()}>\n            <Link to={urlList[index].url}>{urlList[index].text}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default BreadCrumbs;\n","// import css from '../Game/Game.module.scss';\nimport BreadCrumbs from '../../components/BreadCrumbs/BreadCrumbs';\nimport { Link, useLocation } from 'react-router-dom';\nimport books from '../../api/books';\nimport { randomNumber } from '../../api/functions';\n\nconst Game = () => {\n  const location = useLocation();\n  const urlPath = location.pathname.split('/');\n  const currentBook = books.find(book => book.id === Number(urlPath[1]));\n  const currentThema = currentBook.thems.find(them => them.id === Number(urlPath[2]));\n  const currentWord = currentThema.words.find(word => word.id === Number(urlPath[3]));\n  const wordCount = currentThema.words.length;\n  return (\n    <>\n      <BreadCrumbs location={location} books={books} />\n      <h1>{currentWord.name}</h1>\n      <Link to={`../${Number(urlPath[1])}/${Number(urlPath[2])}/${randomNumber(wordCount)}`} className=\"button\">\n        Weiter\n      </Link>\n    </>\n  );\n};\n\nexport default Game;\n","import Section from '../components/Section/Section';\nimport Game from '../components/Game/Game';\nconst Words = () => {\n  return (\n    <Section>\n      <Game />\n    </Section>\n  );\n};\n\nexport default Words;\n"],"names":["randomNumber","maxNumber","Math","floor","random","newKey","Date","getTime","toString","substr","_ref","location","books","pathList","pathname","split","urlList","text","url","console","log","Number","push","name","concat","thems","words","id","_jsx","className","css","children","map","index","Link","to","useLocation","urlPath","currentThema","book","find","them","currentWord","word","wordCount","length","_jsxs","_Fragment","BreadCrumbs","Section","Game"],"sourceRoot":""}